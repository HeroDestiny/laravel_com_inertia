version: '3.8'

services:
  app:
    build:
      context: ../../
      dockerfile: docker/production/Dockerfile
    ports:
      - '80:80'
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-laravel_inertia}
      - DB_USERNAME=${DB_USERNAME:-laravel_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    volumes:
      - app_storage:/var/www/html/storage
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost']
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL para banco de dados
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DB_DATABASE:-laravel_inertia}
      - POSTGRES_USER=${DB_USERNAME:-laravel_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-laravel_user}']
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache e sess√µes (opcional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Nginx Proxy Manager (opcional)
  nginx-proxy:
    image: nginxproxymanager/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    volumes:
      - nginx_data:/data
      - nginx_letsencrypt:/etc/letsencrypt
    depends_on:
      - app

volumes:
  app_storage:
  postgres_data:
  redis_data:
  nginx_data:
  nginx_letsencrypt:
